<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.github.jxc.dao.GoodsStatisticsDao">
	<resultMap type="com.github.jxc.pojo.GoodsStatistics" id="BaseResultMap">
		<id column="goods_id" property="goodsId" jdbcType="INTEGER" />
		<result column="sell_num_statistics" property="sellNumStatistics" jdbcType="INTEGER"/>
		<result column="return_num_statistics" property="returnNumStatistics" jdbcType="INTEGER"/>
		<association property="goods" javaType="com.github.jxc.pojo.Goods">
			<id column="GoodsId" property="goodsId" jdbcType="INTEGER"/>
			<result column="GoodsName" property="goodsName" jdbcType="VARCHAR"/>
			<result column="GoodsBarcode" property="goodsBarcode" jdbcType="VARCHAR"/>
			<result column="GoodsTypeName" property="goodsTypeName" jdbcType="VARCHAR"/>
			<result column="BrandName" property="brandName" jdbcType="VARCHAR"/>
			<result column="BuyingPrice" property="buyingPrice" jdbcType="FLOAT"/>
			<result column="SupplyPrice" property="supplyPrice" jdbcType="FLOAT"/>
			<result column="SalePrice" property="salePrice" jdbcType="FLOAT"/>
			<result column="GoodsDate" property="goodsDate" jdbcType="TIMESTAMP"/>
			<result column="Uint" property="uint" jdbcType="VARCHAR"/>
			<result column="Spec" property="spec" jdbcType="VARCHAR"/>
			<result column="GoodsStatus" property="goodsStatus" jdbcType="VARCHAR"/>
			<result column="GoodsPic" property="goodsPic" jdbcType="VARCHAR"/>
			<result column="Manufacturer" property="manufacturer" jdbcType="VARCHAR"/>
			<result column="GoodsSource" property="goodsSource" jdbcType="VARCHAR"/>
			<result column="Details" property="details" jdbcType="VARCHAR"/>
		</association>		
	</resultMap>
	
	<select id="selectAll" resultMap="BaseResultMap">
		select 
		g.GoodsId as goods_id,g.GoodsName, g.SupplyPrice,ifnull(sd.sell_num_statistics,0) as sell_num_statistics,ifnull(rd.return_num_statistics,0) as return_num_statistics
		from tb_goods g
		left join (
			select goods_id,sum(goods_num) as sell_num_statistics
			from sell_detail group by goods_id
		) sd
		on g.GoodsId = sd.goods_id
		left join (
			select goods_id,sum(goods_num) as return_num_statistics
			from return_detail d group by goods_id
		) rd
		on g.GoodsId = rd.goods_id
	</select>
	
	<select id="selectByTimeKey" resultMap="BaseResultMap" parameterType="java.util.Date">
		select 
		g.GoodsId as goods_id,g.GoodsName,ifnull(sd.sell_num_statistics,0) as sell_num_statistics,ifnull(rd.return_num_statistics,0) as return_num_statistics
		from tb_goods g
		left join (
			select goods_id,sum(goods_num) as sell_num_statistics
			from sell_detail d left join sell_preview p on d.sell_id = p.sell_id
			where p.sell_time between #{0} and #{1}
			group by goods_id
		) sd
		on g.GoodsId = sd.goods_id
		left join (
			select goods_id,sum(goods_num) as return_num_statistics
			from return_detail d left join return_preview p on d.return_id = p.return_id
			where p.return_time between #{0} and #{1}
			group by goods_id
		) rd
		on g.GoodsId = rd.goods_id
	</select>
</mapper>