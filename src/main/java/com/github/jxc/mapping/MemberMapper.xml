<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.jxc.dao.MemberDao">
  <resultMap id="BaseResultMap" type="com.github.jxc.pojo.Member">
    <id column="member_id" jdbcType="INTEGER" property="memberId" />
    <result column="member_name" jdbcType="VARCHAR" property="memberName" />
    <result column="member_sex" jdbcType="VARCHAR" property="memberSex" />
    <result column="join_time" jdbcType="TIMESTAMP" property="joinTime" />
    <result column="member_tel" jdbcType="VARCHAR" property="memberTel" />
    <result column="member_add" jdbcType="VARCHAR" property="memberAdd" />
    <result column="member_email" jdbcType="VARCHAR" property="memberEmail" />
    <result column="member_money" jdbcType="REAL" property="memberMoney" />
    <result column="member_type" jdbcType="INTEGER" property="memberType" />
    <result column="member_point" jdbcType="INTEGER" property="memberPoint" />
    <association property="cardType" javaType="com.github.jxc.pojo.CardType">
    	<id column="card_type_id" jdbcType="INTEGER" property="cardTypeId" />
	    <result column="card_type_name" jdbcType="VARCHAR" property="cardTypeName" />
	    <result column="discount" jdbcType="INTEGER" property="discount" />
	    <result column="point_rule" jdbcType="REAL" property="pointRule" />
	    <result column="default_money" jdbcType="REAL" property="defaultMoney" />
	    <result column="level_up" jdbcType="INTEGER" property="levelUp" />
    </association>
  </resultMap>
  <sql id="Base_Column_List">
    member_id, member_name, member_sex, join_time, member_tel, member_add, member_email, 
    member_money, member_type, member_point
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member
    where member_id = #{memberId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select 
    *
    from member m,card_type ct
    where m.member_type = ct.card_type_id
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from member
    where member_id = #{memberId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.github.jxc.pojo.Member">
    insert into member (member_id, member_name, member_sex, 
      join_time, member_tel, member_add, 
      member_email, member_money, member_type, 
      member_point)
    values (#{memberId,jdbcType=INTEGER}, #{memberName,jdbcType=VARCHAR}, #{memberSex,jdbcType=VARCHAR}, 
      #{joinTime,jdbcType=TIMESTAMP}, #{memberTel,jdbcType=VARCHAR}, #{memberAdd,jdbcType=VARCHAR}, 
      #{memberEmail,jdbcType=VARCHAR}, #{memberMoney,jdbcType=REAL}, #{memberType,jdbcType=INTEGER}, 
      #{memberPoint,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.github.jxc.pojo.Member">
    insert into member
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        member_id,
      </if>
      <if test="memberName != null">
        member_name,
      </if>
      <if test="memberSex != null">
        member_sex,
      </if>
      <if test="joinTime == null">
        join_time,
      </if>
      <if test="memberTel != null">
        member_tel,
      </if>
      <if test="memberAdd != null">
        member_add,
      </if>
      <if test="memberEmail != null">
        member_email,
      </if>
      <if test="memberMoney != null">
        member_money,
      </if>
      <if test="memberType != null">
        member_type,
      </if>
      <if test="memberPoint == null">
        member_point,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="memberId != null">
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="memberName != null">
        #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberSex != null">
        #{memberSex,jdbcType=VARCHAR},
      </if>
      <if test="joinTime == null">
        sysdate(),
      </if>
      <if test="memberTel != null">
        #{memberTel,jdbcType=VARCHAR},
      </if>
      <if test="memberAdd != null">
        #{memberAdd,jdbcType=VARCHAR},
      </if>
      <if test="memberEmail != null">
        #{memberEmail,jdbcType=VARCHAR},
      </if>
      <if test="memberMoney != null">
        #{memberMoney,jdbcType=REAL},
      </if>
      <if test="memberType != null">
        #{memberType,jdbcType=INTEGER},
      </if>
      <if test="memberPoint == null">
        0,
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.jxc.pojo.Member">
    update member
    <set>
      <if test="memberName != null">
        member_name = #{memberName,jdbcType=VARCHAR},
      </if>
      <if test="memberSex != null">
        member_sex = #{memberSex,jdbcType=VARCHAR},
      </if>
      <if test="joinTime != null">
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memberTel != null">
        member_tel = #{memberTel,jdbcType=VARCHAR},
      </if>
      <if test="memberAdd != null">
        member_add = #{memberAdd,jdbcType=VARCHAR},
      </if>
      <if test="memberEmail != null">
        member_email = #{memberEmail,jdbcType=VARCHAR},
      </if>
      <if test="memberMoney != null">
        member_money = #{memberMoney,jdbcType=REAL},
      </if>
      <if test="memberType != null">
        member_type = #{memberType,jdbcType=INTEGER},
      </if>
      <if test="memberPoint != null">
        member_point = #{memberPoint,jdbcType=INTEGER},
      </if>
    </set>
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.jxc.pojo.Member">
    update member
    set member_name = #{memberName,jdbcType=VARCHAR},
      member_sex = #{memberSex,jdbcType=VARCHAR},
      join_time = #{joinTime,jdbcType=TIMESTAMP},
      member_tel = #{memberTel,jdbcType=VARCHAR},
      member_add = #{memberAdd,jdbcType=VARCHAR},
      member_email = #{memberEmail,jdbcType=VARCHAR},
      member_money = #{memberMoney,jdbcType=REAL},
      member_type = #{memberType,jdbcType=INTEGER},
      member_point = #{memberPoint,jdbcType=INTEGER}
    where member_id = #{memberId,jdbcType=INTEGER}
  </update>
</mapper>