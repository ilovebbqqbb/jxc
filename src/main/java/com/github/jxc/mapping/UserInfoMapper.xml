<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.github.jxc.dao.UserInfoDao">
  <resultMap id="BaseResultMap" type="com.github.jxc.pojo.UserInfo">
    <id column="user_info_id" jdbcType="INTEGER" property="userInfoId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="sex" jdbcType="VARCHAR" property="sex" />
    <result column="phone_number" jdbcType="INTEGER" property="phoneNumber" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="job" jdbcType="VARCHAR" property="job" />
    <result column="salary" jdbcType="INTEGER" property="salary" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="degree" jdbcType="VARCHAR" property="degree" />
    <result column="entry_time" jdbcType="TIMESTAMP" property="entryTime" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
	<association property="userAccount" javaType="com.github.jxc.pojo.UserAccount">
	    <id column="user_account_id" jdbcType="INTEGER" property="userAccountId" />
	    <result column="pet_name" jdbcType="VARCHAR" property="petName" />
	    <result column="user_info_id" jdbcType="INTEGER" property="userInfoId" />
	    <result column="password" jdbcType="VARCHAR" property="password" />
	    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
	    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  	</association>
  	<association property="role" javaType="com.github.jxc.pojo.Role">
		<id column="role_id" jdbcType="INTEGER" property="roleId" />
	    <result column="role_name" jdbcType="VARCHAR" property="roleName" />
	    <result column="role_type" jdbcType="VARCHAR" property="roleType" />
	    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
	    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  	</association>
  	<association property="department" javaType="com.github.jxc.pojo.Department">
		<id column="department_id" jdbcType="INTEGER" property="departmentId" />
	    <result column="depart_name" jdbcType="VARCHAR" property="departName" />
	    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
	    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
	    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
	    <result column="department_english_name" jdbcType="VARCHAR" property="departmentEnglishName" />
	    <result column="head" jdbcType="VARCHAR" property="head" />
	    <result column="telephone_number" jdbcType="INTEGER" property="telephoneNumber" />
	    <result column="address" jdbcType="VARCHAR" property="address" />
	    <result column="detail" jdbcType="VARCHAR" property="detail" />
  	</association>
  </resultMap>
  <sql id="Base_Column_List">
    user_info_id, user_name, sex, phone_number, email, department_id, job, salary, birthday, 
    degree, entry_time, role_id, created_at, updated_at
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    *
    from user_info ui,department d,role r,user_account ua
    where ui.user_info_id = #{userInfoId,jdbcType=INTEGER} and ui.department_id=d.department_id and ui.role_id =r.role_id and ui.user_info_id=ua.user_info_id
  </select>
  <select id="queryAllUserInfo" resultMap="BaseResultMap">
    select 
    *
    from user_info ui,user_account ua,role r,department d
    where ui.user_info_id=ua.user_info_id and ui.department_id=d.department_id and ui.role_id=r.role_id
  </select>
  <select id="selectAllUser" resultMap="BaseResultMap">
    select 
    *
    from user_info 
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_info
    where user_info_id = #{userInfoId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.github.jxc.pojo.UserInfo">
    insert into user_info (user_info_id, user_name, sex, 
      phone_number, email, department_id, 
      job, salary, birthday, 
      degree, entry_time, role_id, 
      created_at, updated_at)
    values (#{userInfoId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, 
      #{phoneNumber,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{departmentId,jdbcType=INTEGER}, 
      #{job,jdbcType=VARCHAR}, #{salary,jdbcType=INTEGER}, #{birthday,jdbcType=DATE}, 
      #{degree,jdbcType=VARCHAR}, #{entryTime,jdbcType=TIMESTAMP}, #{roleId,jdbcType=INTEGER}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.github.jxc.pojo.UserInfo" useGeneratedKeys="true" keyProperty="userInfoId">
    insert into user_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userInfoId != null">
        user_info_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="job != null">
        job,
      </if>
      <if test="salary != null">
        salary,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="degree != null">
        degree,
      </if>
      <if test="entryTime != null">
        entry_time,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userInfoId != null">
        #{userInfoId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="job != null">
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        #{salary,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="degree != null">
        #{degree,jdbcType=VARCHAR},
      </if>
      <if test="entryTime != null">
        #{entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.github.jxc.pojo.UserInfo">
    update user_info
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="job != null">
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="salary != null">
        salary = #{salary,jdbcType=INTEGER},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="degree != null">
        degree = #{degree,jdbcType=VARCHAR},
      </if>
      <if test="entryTime != null">
        entry_time = #{entryTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_info_id = #{userInfoId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.github.jxc.pojo.UserInfo">
    update user_info
    set user_name = #{userName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      department_id = #{departmentId,jdbcType=INTEGER},
      job = #{job,jdbcType=VARCHAR},
      salary = #{salary,jdbcType=INTEGER},
      birthday = #{birthday,jdbcType=DATE},
      degree = #{degree,jdbcType=VARCHAR},
      entry_time = #{entryTime,jdbcType=TIMESTAMP},
      role_id = #{roleId,jdbcType=INTEGER},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where user_info_id = #{userInfoId,jdbcType=INTEGER}
  </update>
</mapper>